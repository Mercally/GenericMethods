@model CGC_GM_FE.Common.Models.Boleta

@{
    var ViewModel = new BoletaViewModel(Model.TipoFormulario);
    ViewBag.Title = ViewModel.View_TitlePage();

    if (Model.TipoFormulario == TipoFormularioEnum.Eliminar)
    {
        Layout = null;
    }
    else
    {
        Layout = "~/Views/Shared/_Layout.cshtml";
    }

    var _CurrentRoute = CurrentAction(Model.TipoFormulario);
}

@functions{

    public CurrentRoute CurrentAction(TipoFormularioEnum tipoFormulario)
    {
        CurrentRoute currentAction = new CurrentRoute("Boletas");
        switch (tipoFormulario)
        {
            case TipoFormularioEnum.Crear:
                currentAction.Action = "Create";
                break;
            case TipoFormularioEnum.Editar:
                currentAction.Action = "Edit";
                break;
            case TipoFormularioEnum.Eliminar:
                currentAction.Action = "Delete";
                currentAction.Route = new { id = Model.Id };
                break;
            case TipoFormularioEnum.Detalle:
            default:
                break;
        }
        return currentAction;
    }
}

@section Breadcrumb{
    <li class="breadcrumb-item">@Html.ActionLink("Dashboard", "Index", "Dashboard")</li>
    <li class="breadcrumb-item">@Html.ActionLink("Boletas", "Index", "Boletas")</li>
    <li class="breadcrumb-item active">@ViewModel.View_TitlePage()</li>
}

<div class="row">
    @Html.Partial("_card", ViewModel)
    <div class="col-sm-12 col-lg-9">
        @{
            using (Ajax.BeginForm(actionName: _CurrentRoute.Action, controllerName: _CurrentRoute.Controller, routeValues: _CurrentRoute.Route, ajaxOptions: new AjaxOptions { HttpMethod = "POST" }, htmlAttributes: new { enctype = "multipart/form-data" }))
            {
                @Html.AntiForgeryToken()
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                if (Model.TipoFormulario == TipoFormularioEnum.Crear || Model.TipoFormulario == TipoFormularioEnum.Editar)
                {
                    <div class="form-row">
                        <div class="col-sm-12 col-md-6 col-lg-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.NumeroBoleta, htmlAttributes: new { @class = "control-label col-md-12" })
                                <div class="col-md-12">
                                    @Html.EditorFor(model => model.NumeroBoleta, new { htmlAttributes = new { @class = "form-control col-sm-12" } })
                                    @Html.ValidationMessageFor(model => model.NumeroBoleta, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.Descripcion, htmlAttributes: new { @class = "control-label col-md-12" })
                                <div class="col-md-12">
                                    @Html.EditorFor(model => model.Descripcion, new { htmlAttributes = new { @class = "form-control col-sm-12" } })
                                    @Html.ValidationMessageFor(model => model.Descripcion, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.ClienteId, htmlAttributes: new { @class = "control-label col-md-12" })
                                <div class="col-md-12">
                                    @Html.DropDownListFor(model => model.ClienteId, ViewBag.ListCliente as SelectList, new { @class = "form-control col-sm-12" })
                                    @Html.ValidationMessageFor(model => model.ClienteId, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.ProyectoId, htmlAttributes: new { @class = "control-label col-md-12" })
                                <div class="col-md-12">
                                    @Html.DropDownListFor(model => model.ProyectoId, ViewBag.ListProyecto as SelectList, new { @class = "form-control col-sm-12" })
                                    @Html.ValidationMessageFor(model => model.ProyectoId, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.FechaEntrada, htmlAttributes: new { @class = "control-label col-md-12" })
                                <div class="col-md-12">
                                    <div class="input-group">
                                        @Html.EditorFor(model => model.FechaEntrada, new { htmlAttributes = new { @id = "FechaEntrada", @type = "text", @class = "form-control col-sm-12" } })
                                        @Html.ValidationMessageFor(model => model.FechaEntrada, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.FechaSalida, htmlAttributes: new { @class = "control-label col-md-12" })
                                <div class="col-md-12">
                                    <div class="input-group">
                                        @Html.EditorFor(model => model.FechaSalida, new { htmlAttributes = new { @id = "FechaSalida", @type = "text", @class = "form-control col-sm-12" } })
                                        @Html.ValidationMessageFor(model => model.FechaSalida, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="col-sm-12 col-md-6 col-lg-6">
                            @*<div class="form-group">
                                    @Html.LabelFor(model => model.TiempoEfectivoId, htmlAttributes: new { @class = "control-label col-md-12" })
                                    <div class="col-md-12">
                                        @Html.DropDownListFor(model => model.TiempoEfectivoId, ViewBag.TiempoEfectivo as SelectList, new { @class = "form-control col-sm-12" })
                                        @Html.ValidationMessageFor(model => model.TiempoEfectivoId, "", new { @class = "text-danger" })
                                    </div>
                                </div>*@
                            <div class="form-group">
                                @Html.LabelFor(model => model.TiempoInvertidoEn, htmlAttributes: new { @class = "control-label col-md-12" })
                                <div class="col-md-12">
                                    @Html.DropDownListFor(model => model.TiempoInvertidoEn, ViewBag.ListTiempoInvertido as SelectList, new { @class = "form-control col-sm-12" })
                                    @Html.ValidationMessageFor(model => model.TiempoInvertidoEn, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.DepartamentoId, htmlAttributes: new { @class = "control-label col-md-12" })
                                <div class="col-md-12">
                                    @Html.DropDownListFor(model => model.DepartamentoId, ViewBag.Departamento as SelectList, new { @class = "form-control col-sm-12" })
                                    @Html.ValidationMessageFor(model => model.DepartamentoId, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>
                }
                if (Model.TipoFormulario == TipoFormularioEnum.Detalle || Model.TipoFormulario == TipoFormularioEnum.Eliminar)
                {
                    <div class="col-sm-12 col-md-6 col-lg-6">
                        <div class="form-group">
                            @Html.LabelFor(model => model.NumeroBoleta, htmlAttributes: new { @class = "control-label col-md-12" })
                            <div class="col-md-12">
                                @Html.EditorFor(model => model.NumeroBoleta, new { htmlAttributes = new { @class = "form-control col-sm-12", @disabled = "disabled" } })
                                @Html.ValidationMessageFor(model => model.NumeroBoleta, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.Descripcion, htmlAttributes: new { @class = "control-label col-md-12" })
                            <div class="col-md-12">
                                @Html.EditorFor(model => model.Descripcion, new { htmlAttributes = new { @class = "form-control col-sm-12", @disabled = "disabled" } })
                                @Html.ValidationMessageFor(model => model.Descripcion, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.ClienteId, htmlAttributes: new { @class = "control-label col-md-12" })
                            <div class="col-md-12">
                                @Html.DropDownListFor(model => model.ClienteId, ViewBag.ListCliente as SelectList, new { @class = "form-control col-sm-12", @disabled = "disabled" })
                                @Html.ValidationMessageFor(model => model.ClienteId, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.ProyectoId, htmlAttributes: new { @class = "control-label col-md-12" })
                            <div class="col-md-12">
                                @Html.DropDownListFor(model => model.ProyectoId, ViewBag.ListProyecto as SelectList, new { @class = "form-control col-sm-12", @disabled = "disabled" })
                                @Html.ValidationMessageFor(model => model.ProyectoId, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.Label("Fecha y hora de entrada", htmlAttributes: new { @class = "control-label col-md-12" })
                            <div class="col-md-12">
                                <div class="input-group">
                                    @Html.EditorFor(model => model.FechaEntrada, new { htmlAttributes = new { @id = "FechaEntrada", @type = "text", @class = "form-control col-sm-12", @disabled = "disabled" } })
                                    @Html.ValidationMessageFor(model => model.FechaEntrada, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.Label("Fecha y hora de salida", htmlAttributes: new { @class = "control-label col-md-12" })
                            <div class="col-md-12">
                                <div class="input-group">
                                    @Html.EditorFor(model => model.FechaSalida, new { htmlAttributes = new { @id = "FechaSalida", @type = "text", @class = "form-control col-sm-12", @disabled = "disabled" } })
                                    @Html.ValidationMessageFor(model => model.FechaSalida, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="col-sm-12 col-md-6 col-lg-6">
                        <div class="form-group">
                            @Html.LabelFor(model => model.TiempoEfectivo, htmlAttributes: new { @class = "control-label col-md-12" })
                            <div class="col-md-12">
                                @Html.EditorFor(model => model.TiempoEfectivo, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", @disabled = "disabled" } })
                                @Html.ValidationMessageFor(model => model.TiempoEfectivo, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.TiempoInvertidoEn, htmlAttributes: new { @class = "control-label col-md-12" })
                            <div class="col-md-12">
                                @Html.DropDownListFor(model => model.TiempoInvertidoEn, ViewBag.ListTiempoInvertido as SelectList, new { @class = "form-control col-sm-12", @disabled = "disabled" })
                                @Html.ValidationMessageFor(model => model.TiempoInvertidoEn, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.DepartamentoId, htmlAttributes: new { @class = "control-label col-md-12" })
                            <div class="col-md-12">
                                @Html.DropDownListFor(model => model.DepartamentoId, ViewBag.Departamento as SelectList, new { @class = "form-control col-sm-12", @disabled = "disabled" })
                                @Html.ValidationMessageFor(model => model.DepartamentoId, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.Label("Actividades", htmlAttributes: new { @class = "control-label col-md-12" })
                            <div class="col-md-12">
                                @Html.ActionLink("Gestionar actividades", "Index", new { controller = "Actividades", id = Model.Id }, null)
                            </div>
                        </div>
                    </div>
                }

                <div class="form-row">
                    <div class="col-sm-12 col-md-12 col-lg-12">
                        <div class="form-group">
                            <div class="col-md-10">
                                @Html.ButtonSaveChanges(model => model.BotonGuardarCambios, Model.TipoFormulario, Model.Id == 0)
                            </div>
                        </div>
                    </div>
                </div>
            }
        }
    </div>
</div>
@if (Model.TipoFormulario != TipoFormularioEnum.Eliminar)
{
    <div>
        @Html.ActionLink("Volver", "Index")
    </div>
}
@section Styles{
    <link href="~/Vendor/datetimepicker/jquery.datetimepicker.min.css" rel="stylesheet" />
}

@section Scripts{
    <script src="~/Vendor/datetimepicker/jquery.datetimepicker.full.min.js"></script>
    <script type="text/javascript">
        $(function () {
            $('#FechaEntrada').datetimepicker();
            $('#FechaSalida').datetimepicker();
        });
    </script>
}